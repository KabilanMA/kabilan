<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://kabilanma.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kabilanma.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-17T16:09:18+00:00</updated><id>https://kabilanma.github.io/feed.xml</id><title type="html">blank</title><subtitle>Computer Science Researcher in PL area. </subtitle><entry><title type="html">From Atheist to Believer</title><link href="https://kabilanma.github.io/blog/2025/ghost-story/" rel="alternate" type="text/html" title="From Atheist to Believer"/><published>2025-02-17T06:01:00+00:00</published><updated>2025-02-17T06:01:00+00:00</updated><id>https://kabilanma.github.io/blog/2025/ghost-story</id><content type="html" xml:base="https://kabilanma.github.io/blog/2025/ghost-story/"><![CDATA[<h4 id="this-is-a-story-happened-in-my-personal-which-changed-my-perspective">This is a Story Happened in My Personal Which Changed My Perspective</h4> <hr/> <p>I was a staunch atheist. Science and logic were my guiding principles, and I never believed in anything supernatural. That was until one strange experience changed my entire outlook on life.</p> <p>During the COVID-19 lockdown in 2021, I had a routine with four close friends. Every evening, we would gather, chat about anything and everything, sometimes gossip, and then go for dinner. Our meeting spot was always the same—one of my friends’ houses, conveniently located in the center of town. This friend had a habit of exaggerating stories, so we didn’t always take his words seriously.</p> <p>One day, he told us that someone was throwing stones at his house from different directions. The stones were unusual, not the kind found in the nearby area. He suspected that people were trying to scare his family into leaving their home. At first, we brushed it off as another one of his exaggerated tales. But he kept repeating the story every time we met. The more he insisted, the less we paid attention.</p> <p>Then, one evening, we met outside his house before heading to another friend’s place for a funeral. But something was different that day—his entire family was sitting outside, looking tense. When I asked what was happening, my friend told me that, for the past few days, stones had been appearing inside their fully closed house. They had locked all doors and windows, yet the stones still managed to get in. His family had collected a large bag full of these mysterious stones.</p> <p>Curious but skeptical, I asked to go inside the house and see for myself. My other friends refused, saying they had heard strange noises from the kitchen earlier. Still, I went in with my friend. He locked all the doors and windows, making sure there was no way for anyone to throw anything from outside. Then, he called out loudly, as if inviting something to reveal itself. I found this amusing and couldn’t help but laugh. It reminded me of ghost-hunting shows from my childhood. Nothing happened at first, and I was about to dismiss the whole thing when, suddenly, a stone landed on a metal plate on the dining table.</p> <p>There was no one else in the house. No hidden places. No logical explanation. Yet, a stone had appeared from nowhere.</p> <p>Still determined to find an answer, I stayed quiet about what I had seen. Later, two men from a nearby workshop came by, curious about the rumors. My friend invited them in, and I joined them. This time, as my friend repeated his ritual, something happened that I will never forget.</p> <p>I saw a stone appear in mid-air—just a few feet in front of me. It wasn’t there one moment, and the next, it materialized out of thin air before being thrown across the room, hitting a wall.</p> <p>I ran outside, terrified. I told my friends what I had seen, and we discussed it at length, but I couldn’t explain it. Later that night, at the funeral house, another friend shared similar eerie experiences from his shop in the same town. Normally, I would have dismissed such stories, but now, I couldn’t.</p> <p>A few days later, when we met again, my friend’s family was back inside their home. I asked what had changed. He told me that a temple priest had visited their house, performed a ritual, and lit a candle, asking them to let it burn for a day. After that, the disturbances stopped completely.</p> <p>This experience shook me to the core. It made me realize that there are things in this world beyond human understanding. We perceive only a tiny fraction of reality, and there is so much more that we might never comprehend.</p> <p>Since then, I have embraced my roots and started following Sanatana Dharma. Even if there is no god, I believe this path provides wisdom, discipline, and a sense of purpose. I no longer dismiss the unknown so easily, and I walk forward with a newfound respect for the mysteries of life.</p>]]></content><author><name></name></author><category term="story"/><category term="formatting"/><summary type="html"><![CDATA[This is a Story Happened in My Personal Which Changed My Perspective]]></summary></entry><entry><title type="html">GNU Debugger (GDB) Quick Notes</title><link href="https://kabilanma.github.io/blog/2025/gdb/" rel="alternate" type="text/html" title="GNU Debugger (GDB) Quick Notes"/><published>2025-01-21T06:01:00+00:00</published><updated>2025-01-21T06:01:00+00:00</updated><id>https://kabilanma.github.io/blog/2025/gdb</id><content type="html" xml:base="https://kabilanma.github.io/blog/2025/gdb/"><![CDATA[<p><strong>GDB</strong> (<strong>G</strong>NU <strong>D</strong>e<strong>B</strong>ugger) is a powerful commandline debugging tool for programs written in C, C++, and other languages, allowing developers to run programs step-by-step, set breakpoints, inspect variables, view the call stack, and modify program behavior during execution to identify and fix bugs efficiently.</p> <hr/> <p>First install GDB:</p> <p><code class="language-plaintext highlighter-rouge">sudo apt install gdb</code></p> <p>Consider this code snippet:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">long</span> <span class="kt">double</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">,</span> <span class="n">step</span><span class="p">;</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"Enter the start value: "</span><span class="p">);</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%Lf"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">start</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"Enter the end value: "</span><span class="p">);</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%Lf"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">end</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"Enter the step value: "</span><span class="p">);</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">"%Lf"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">step</span><span class="p">);</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">start</span> <span class="o">!=</span> <span class="n">end</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Value: %Lf</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">start</span><span class="p">);</span>
        <span class="n">start</span> <span class="o">+=</span> <span class="n">step</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>Compile the program with <code class="language-plaintext highlighter-rouge">gcc main.c -o main.out</code> , and run with <code class="language-plaintext highlighter-rouge">./main.out</code>.</p> <p>When we run the program with the following output:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Enter the start value: 1
Enter the end value: 5
Enter the step value: 0.2
</code></pre></div></div> <p>The program will not end because of the floating point error. We can use the GDB debugger to find the root cause of the problem.</p> <p>To do this, we can compile the program using gcc with the information needed for debugging, which includes the mapping between the source code and the binary. Because of this extra information, this compiled binary will be larger than the normal binary file.</p> <p>To compile:</p> <p><code class="language-plaintext highlighter-rouge">gcc main.c -o main.out -g</code></p> <p>Flag <code class="language-plaintext highlighter-rouge">-g</code> helps to compile with debugging information.</p> <p>To invoke the GDB with the binary file:</p> <p><code class="language-plaintext highlighter-rouge">gdb main.out</code></p> <p>This will open-up the GDB commandline debugger. The commands below that starts with <code class="language-plaintext highlighter-rouge">(gdb)</code> are commands entered in the commandline debugger.</p> <p>We can see the source-code using the command <code class="language-plaintext highlighter-rouge">(gdb) list</code> . This will print the entire source code mapped in the main.out. In some cases this can also help to find the line number of the source code to set the break-points later.</p> <p>Use the command, <code class="language-plaintext highlighter-rouge">(gdb) break 17</code> to create a breakpoint on the line number 16 (In our example case, just after where the <code class="language-plaintext highlighter-rouge">while</code> loops begins).</p> <p>The command <code class="language-plaintext highlighter-rouge">(gdb) deassemble main</code> will print the assembly code of the main function (not the entire program in the main.c file).</p> <p>The command <code class="language-plaintext highlighter-rouge">(gdb) run</code> now runs the program and break at the set breakpoint and let us analyse the memory and individual variables.</p> <p><code class="language-plaintext highlighter-rouge">(gdb) print &lt;variable&gt;</code> will print the value of the variable in the breakpoint. For example, in our case, <code class="language-plaintext highlighter-rouge">(gdb) print start</code> will print the start value in the while loop and we can use <code class="language-plaintext highlighter-rouge">(gdb) continue</code> to continue the program until it meets the next breakpoint. We can pause and see the value of the variable <code class="language-plaintext highlighter-rouge">start</code> when it is supposed to have 5 but you can see it is actually not 5 but 4.99999999999999999957 which makes the while loop condition to be true all the time and the loop continue infinitely. This concluded the loss of precission error in floating point numbers is in the program.</p> <p>There are few other useful GDB command below:</p> <ol> <li> <p><code class="language-plaintext highlighter-rouge">run arg1 arg2 ....</code> : We can run the program using this command and also pass any number of optional arguments that the program might require.</p> </li> <li><code class="language-plaintext highlighter-rouge">quit</code> : Quit the debugger.</li> <li><code class="language-plaintext highlighter-rouge">break</code> : Set breaking points in the program <ol> <li><code class="language-plaintext highlighter-rouge">break main</code> : Create a breaking point at the start of the main function.</li> <li><code class="language-plaintext highlighter-rouge">break 42</code> : Create a breaking point at the line number 42.</li> <li><code class="language-plaintext highlighter-rouge">break file.c:15</code> : Create a breaking point at line 15 of file.c</li> </ol> </li> <li><code class="language-plaintext highlighter-rouge">info breakpoints</code> : Get the details about the points set in the program.</li> <li><code class="language-plaintext highlighter-rouge">delete 2</code> : Delete the 2nd breaking point (breaking point number can be retrived from <code class="language-plaintext highlighter-rouge">info</code> command)</li> <li><code class="language-plaintext highlighter-rouge">watch var</code> : Watch a variable and stop when its value changes.</li> <li><code class="language-plaintext highlighter-rouge">continue</code> ****(or <code class="language-plaintext highlighter-rouge">c</code>): Continue execution until the next breakpoint or end.</li> <li><code class="language-plaintext highlighter-rouge">step</code> (or <code class="language-plaintext highlighter-rouge">s</code>): Step into a function call.</li> <li><code class="language-plaintext highlighter-rouge">next</code> (or <code class="language-plaintext highlighter-rouge">n</code>): Step over a function call.</li> <li><code class="language-plaintext highlighter-rouge">finish</code>: Run until the current function returns.</li> <li><code class="language-plaintext highlighter-rouge">until 50</code>: Run until line number 50.</li> <li><code class="language-plaintext highlighter-rouge">print x</code> : Print the value of a variable.</li> <li><code class="language-plaintext highlighter-rouge">display x</code> : Automatically print a variable’s value every time it changes.</li> <li><code class="language-plaintext highlighter-rouge">info locals</code>: Show local variables in the current stack frame.</li> <li><code class="language-plaintext highlighter-rouge">info args</code>: Show function arguments in the current stack frame.</li> <li><code class="language-plaintext highlighter-rouge">backtrace</code> (or <code class="language-plaintext highlighter-rouge">bt</code>): Show the call stack.</li> <li><code class="language-plaintext highlighter-rouge">frame 2</code> (or <code class="language-plaintext highlighter-rouge">f</code>): Move to a specific stack frame.</li> <li><code class="language-plaintext highlighter-rouge">list</code> (or <code class="language-plaintext highlighter-rouge">l</code>): Show source code near the current execution point.</li> <li><code class="language-plaintext highlighter-rouge">list</code></li> <li><code class="language-plaintext highlighter-rouge">list 10</code> : List around line 10</li> <li><code class="language-plaintext highlighter-rouge">list main</code> : List the main function</li> <li><code class="language-plaintext highlighter-rouge">condition</code>: Set a condition on a breakpoint.</li> <li><code class="language-plaintext highlighter-rouge">condition 2 x &gt; 5</code> : Set a breakpoint number 2 only when variable value x is greater than 5</li> <li><code class="language-plaintext highlighter-rouge">set var x = 42</code> : Modify a variable or memory.</li> </ol>]]></content><author><name></name></author><category term="notes"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[This contains the basic informations about using GNU debugger for C/C++ programs.]]></summary></entry><entry><title type="html">An Image Gallery of Chongqing, China</title><link href="https://kabilanma.github.io/blog/2024/apsec2024/" rel="alternate" type="text/html" title="An Image Gallery of Chongqing, China"/><published>2024-12-15T21:01:00+00:00</published><updated>2024-12-15T21:01:00+00:00</updated><id>https://kabilanma.github.io/blog/2024/apsec2024</id><content type="html" xml:base="https://kabilanma.github.io/blog/2024/apsec2024/"><![CDATA[<p>31<sup>st</sup> Asia-Pacific Software Engineering Conference held in <strong>Chongqing, China</strong>. Here are some pictures I captured around the city of Chongqing and the conference.</p> <hr/> <p><strong>Hongya Dong</strong></p> <p>is a an 11-story stilt-building complex in the main commercial district of Jiefangbei in the city of Chongqing, China. It comprises a series of structures built into the hillside along the southern bank of the Jialing River, and is one of the most popular tourist attractions in the city. Across the Jialing River opposite to the Hongya Dong gives better view of the complex along with the Twin bridge over the river.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/4.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/4.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/5.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/5.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/6.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/6.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/7.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/7.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/8.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/8.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/9.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/9.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/10.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/10.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/11.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/11.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/12.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/12.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <p><strong>Liziba Station</strong></p> <p>is a monorail station on Line 2 of Chongqing Rail Transit where the station is located on the 19th floor of a residential building which was built along with the station in 2005 where the train goes through the building.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/21.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/21.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/22.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/22.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/23.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/23.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <p><strong>Kuixinglou Square</strong></p> <p>is a public square which looks normal ground floor until you take the look one edge of the square which shows that you are in 22nd floor while the opposite edge has public roads on the same floor and it is considered ground floor. Chongqing is a mountainous terrain cyberpunk city.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/24.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/24.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/25.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/25.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/26.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/26.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <p><strong>Liberation Monument</strong></p> <p>in Chongqing is the War Victory Monument and People’s Liberation Monument. It is located in the heart of the central business district of Jiefangbei in Yuzhong District, Chongqing. The Jiefangbei clock tower on the monument is one of Chongqing’s most iconic locations. The tower was built in remembrance of China’s victory in the Sino-Japanese war. An interesting fact, at about 28 meters tall, only a few decades ago, the liberation monument was one of the tallest buildings in all of Chongqing. The monument is located in the middle of what is the modern-day pedestrian street and the 4 main roads converge at the monument.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/27.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/27.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/28.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/28.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/29.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/29.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <hr/> <p><strong>Ronghui Hot Springs</strong></p> <p>is where the Asia-Pacific Software Engineering Conference (2024) took place. It is vibrant, friendly and remote location in Chongqing.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/31.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/31.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/32.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/32.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/33.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/33.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/34.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/34.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/apsec_2024/35.jpeg" sizes="95vw"/> <img src="/assets/img/apsec_2024/35.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="conference"/><category term="images"/><summary type="html"><![CDATA[This is about my visit to Chongqing for APSEC 2024 conference.]]></summary></entry></feed>